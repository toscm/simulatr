% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_dataset.R
\name{simulate_dataset}
\alias{simulate_dataset}
\title{Simulate a Dataset}
\usage{
simulate_dataset(
  n = 5,
  p = 5,
  data = simulatr::normal_data(n, p),
  gse = NULL,
  noise_func = NULL,
  noise_func_args = list(sd = 1),
  bias_func = NULL,
  bias_func_args = list(n = 1, p = 1, s = 1)
)
}
\arguments{
\item{n}{The number of samples.}

\item{p}{The number of features.}

\item{noise_func}{A function taking the matrix as
first argument and other optional parameters as futher arguments}

\item{noise_func_args}{Additional arguments to be passed to \code{noise_func}}

\item{beta}{The model coefficients.}

\item{y}{The results generated from the dataset and model coefficients.}

\item{base}{The dataset to use as basis for the generation, e.g. HG-U133B for
mRNA datasets measured with the Affymetrix HG-U133B microarray.}

\item{family}{The type of model to use when generating the outcome variable.
Either \code{gaussian},\code{binomial} or \code{cox}.}

\item{cor}{Correlation strength within the data}

\item{cortype}{Method to use for generating the correlation within
the dataset.}

\item{noise}{Amount of noise to add to each predictor}

\item{noisevar}{Variance of noise}

\item{bias}{Amount of bias to simulate}

\item{biastype}{Method to use for generating the bias. See below for details.}
}
\value{
A dataframe of size n*p with simulated data.
}
\description{
\code{simulate_dataset()} returns a dataset of size n*p
}
\details{
simulate_dataset <-
function( n=3, p=4, beta=NULL, base="HG-U133B", family="gaussian", cor=0.5,
cortype=1, noise=1, noisevar=1, bias=0, biastype=1 )
}
\examples{
\dontrun{
simulate_dataset(n = 5, p = 5, data = data.frame(matrix(rnorm(6 * 6), 6, 6)))
}
\dontrun{
simulate_dataset(10, 15)
}
\dontrun{
simulate_dataset(n = 5, p = 8, gse = "GSE3821")
}
\dontrun{
simulate_dataset(
  n = 10,
  p = 10,
  noise_func = poisson_noise,
  noise_func_args = list(lambda = 1)
)
}
\dontrun{
simulate_dataset(
  n = 10,
  p = 10,
  gse = "GSE3821",
  noise_func = uniform_noise,
  noise_func_args = list(min = 0, max = 1),
  bias_func = constant_batch_effect,
  bias_func_args = list(
    b = c(1, 1, 1, 2, 2, 2, 3, 3, 4, 4),
    f = 4,
    s = c(0, 1)
  )
)
}

}
